// This is your Prisma schema file.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication and relations
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // Custom relations to your app's data
  snippets      Snippet[]
}

// Your core data model for code snippets
model Snippet {
  id        String   @id @default(cuid())
  title     String
  content   String
  language  String   @default("plaintext")
  tags      String[] @default([]) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to the User who owns the snippet
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// ---- Next-Auth Required Models ----

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}